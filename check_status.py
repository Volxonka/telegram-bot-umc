#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
"""

import os
import sys

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    
    required_files = [
        'bot.py',
        'webapp_config.py',
        'webapp/enhanced.html',
        'webapp/enhanced-styles.css',
        'webapp/enhanced-app.js',
        'webapp/server.py',
        'webapp/requirements.txt'
    ]
    
    all_exist = True
    for file_path in required_files:
        if os.path.exists(file_path):
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_exist = False
    
    return all_exist

def check_webapp_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        with open('webapp_config.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        if 'WEBAPP_BASE_URL = "https://your-domain.com"' in content:
            print("‚ö†Ô∏è  URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
            print("   –û–±–Ω–æ–≤–∏—Ç–µ WEBAPP_BASE_URL –≤ webapp_config.py")
            return False
        else:
            print("‚úÖ URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_bot_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ –±–æ—Ç–µ"""
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞...")
    
    try:
        with open('bot.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        checks = [
            ('from webapp_config import', '–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏'),
            ('handle_webapp', '–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'),
            ('üöÄ –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', '–ö–Ω–æ–ø–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'),
            ('get_webapp_info()', '–°–æ–∑–¥–∞–Ω–∏–µ WebAppInfo')
        ]
        
        all_found = True
        for check, description in checks:
            if check in content:
                print(f"‚úÖ {description}")
            else:
                print(f"‚ùå {description} - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                all_found = False
        
        return all_found
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞: {e}")
        return False

def check_webapp_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        with open('webapp/server.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        if 'PORT = int(os.environ.get(\'PORT\', 8080))' in content:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PORT (–¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞)")
        else:
            print("‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ö–æ—Å—Ç–∏–Ω–≥")
        
        if 'Access-Control-Allow-Origin' in content:
            print("‚úÖ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        else:
            print("‚ùå CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º")
    print("=" * 60)
    
    checks = [
        ("–§–∞–π–ª—ã", check_files),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", check_webapp_config),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –±–æ—Ç–∞", check_bot_integration),
        ("–í–µ–±-—Å–µ—Ä–≤–µ—Ä", check_webapp_server)
    ]
    
    results = []
    for check_name, check_func in checks:
        try:
            result = check_func()
            results.append((check_name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ {check_name}: {e}")
            results.append((check_name, False))
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 60)
    
    all_passed = True
    for check_name, result in results:
        status = "‚úÖ –ì–û–¢–û–í–û" if result else "‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø"
        print(f"{check_name:.<30} {status}")
        if not result:
            all_passed = False
    
    print("=" * 60)
    
    if all_passed:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. üåê –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ö–æ—Å—Ç–∏–Ω–≥ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("2. üîß –û–±–Ω–æ–≤–∏—Ç–µ WEBAPP_BASE_URL –≤ webapp_config.py")
        print("3. ü§ñ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python bot.py")
        print("4. üì± –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ Telegram")
    else:
        print("‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º")
    
    print("\nüí° –î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–º. NEXT_STEPS.md")
    
    return all_passed

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
